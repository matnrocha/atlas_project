spring.application.name=ATLAS_api
springdoc.api-docs.path=/api-docs

# DB config
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Config
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update

# JPA/Hibernate Config
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# JWT Config
security.jwt.secret-key=${SECURITY_JWT_SECRET_KEY}
security.jwt.expiration-time=${SECURITY_JWT_EXPIRATION_TIME}

cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}


# Kafka Config
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.kafka.deserializer.value.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.kafka.deserializer.value.delegate=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=ATLAS
spring.kafka.consumer.auto-offset-reset=earliest
# spring.kafka.consumer.properties[spring.json.value.default.type]=ies.grupo202.ATLAS_api.kafka.Entities.SensorData
